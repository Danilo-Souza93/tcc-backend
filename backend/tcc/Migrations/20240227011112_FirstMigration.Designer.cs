// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using tcc.Context;

#nullable disable

namespace tcc.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20240227011112_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("tcc.Models.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bandeira")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CodigoSeguranca")
                        .HasColumnType("integer");

                    b.Property<int?>("DadosPagamentoModelId")
                        .HasColumnType("integer");

                    b.Property<string>("DtValidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeCartao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroCartao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DadosPagamentoModelId");

                    b.ToTable("Cartao");
                });

            modelBuilder.Entity("tcc.Models.DadosPagamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DebitoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DebitoId");

                    b.ToTable("DadosPagamentoModel");
                });

            modelBuilder.Entity("tcc.Models.DadosPessoaisModel", b =>
                {
                    b.Property<int>("Cpf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Cpf"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Cpf");

                    b.ToTable("DadosPessoaisModel");
                });

            modelBuilder.Entity("tcc.Models.EnderecoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cep")
                        .HasColumnType("integer");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EnderecoModel");
                });

            modelBuilder.Entity("tcc.Models.ProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalhe")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("integer");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.Property<int?>("VendaModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VendaModelId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("tcc.Models.VendaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DadosPagamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("DadosPessoaisCpf")
                        .HasColumnType("integer");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DadosPagamentoId");

                    b.HasIndex("DadosPessoaisCpf");

                    b.HasIndex("EnderecoId");

                    b.ToTable("vendas");
                });

            modelBuilder.Entity("tcc.Models.Cartao", b =>
                {
                    b.HasOne("tcc.Models.DadosPagamentoModel", null)
                        .WithMany("Credito")
                        .HasForeignKey("DadosPagamentoModelId");
                });

            modelBuilder.Entity("tcc.Models.DadosPagamentoModel", b =>
                {
                    b.HasOne("tcc.Models.Cartao", "Debito")
                        .WithMany()
                        .HasForeignKey("DebitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debito");
                });

            modelBuilder.Entity("tcc.Models.ProdutoModel", b =>
                {
                    b.HasOne("tcc.Models.VendaModel", null)
                        .WithMany("Produtos")
                        .HasForeignKey("VendaModelId");
                });

            modelBuilder.Entity("tcc.Models.VendaModel", b =>
                {
                    b.HasOne("tcc.Models.DadosPagamentoModel", "DadosPagamento")
                        .WithMany()
                        .HasForeignKey("DadosPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tcc.Models.DadosPessoaisModel", "DadosPessoais")
                        .WithMany()
                        .HasForeignKey("DadosPessoaisCpf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tcc.Models.EnderecoModel", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadosPagamento");

                    b.Navigation("DadosPessoais");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("tcc.Models.DadosPagamentoModel", b =>
                {
                    b.Navigation("Credito");
                });

            modelBuilder.Entity("tcc.Models.VendaModel", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
